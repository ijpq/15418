__device__ __inline__
int circleInBoxConservative(float circleX, float circleY, float circleRadius,
                            float boxL, float boxR, float boxT, float boxB) {

    // Expand box by circle radius. Test if circle center is in expanded box.
    return circleX >= (boxL - circleRadius) &&
           circleX <= (boxR + circleRadius) &&
           circleY >= (boxB - circleRadius) &&
           circleY <= (boxT + circleRadius);
}

__device__ __inline__
int circleInBox(float circleX, float circleY, float circleRadius,
                float boxL, float boxR, float boxT, float boxB) {

    // Clamp circle center to box (finds the closest point on the box)
    float closestX = (circleX > boxL) ? ((circleX < boxR) ? circleX : boxR) : boxL;
    float closestY = (circleY > boxB) ? ((circleY < boxT) ? circleY : boxT) : boxB;

    // Is circle radius less than the distance to the closest point on the box?
    float distX = closestX - circleX;
    float distY = closestY - circleY;

    return ((distX * distX) + (distY * distY)) <= (circleRadius * circleRadius);
}
